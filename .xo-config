{
	"prettier": true,
	"rules": {
		"unicorn/catch-error-name": [
			"error",
			{
				"name": "exception"
			}
		],
		"@typescript-eslint/naming-convention": [
			"error",
			{
				"selector": [
					"variable",
					"function",
					"classProperty",
					"parameterProperty",
					"classMethod",
					"objectLiteralMethod",
					"typeMethod",
					"accessor"
				],
				"format": [
					"strictCamelCase"
				],
				"leadingUnderscore": "allowSingleOrDouble",
				"trailingUnderscore": "allow",
				"filter": {
					"regex": "[- ]",
					"match": false
				}
			},
			{
				"selector": [
					"objectLiteralProperty"
				],
				"format": [
					"camelCase"
				]
			},
			{
				"selector": "typeLike",
				"format": [
					"StrictPascalCase"
				]
			},
			{
				"selector": "variable",
				"types": [
					"boolean"
				],
				"format": [
					"StrictPascalCase"
				],
				"prefix": [
					"is",
					"has",
					"can",
					"should",
					"will",
					"did"
				]
			},
			{
				"selector": "interface",
				"filter": "/^(?!I)[A-Z]/.source",
				"format": [
					"StrictPascalCase"
				]
			},
			{
				"selector": "typeParameter",
				"filter": "/^T$|^[A-Z][a-zA-Z]+$/.source",
				"format": [
					"StrictPascalCase"
				]
			},
			{
				"selector": [
					"classProperty",
					"objectLiteralProperty"
				],
				"format": null,
				"modifiers": [
					"requiresQuotes"
				]
			}
		]
	}
}
